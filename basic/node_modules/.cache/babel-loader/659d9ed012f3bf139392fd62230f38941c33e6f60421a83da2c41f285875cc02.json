{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dodoh\\\\Desktop\\\\Coding\\\\My-Git\\\\makeSome_React\\\\basic\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Banner } from \"./components/molecules\";\nimport { Profile } from \"./components/organisms\";\nimport \"./App.css\";\nimport { db } from \"./firebase\";\nimport { collection, query, where, getDoc, doc, updateDoc, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [people, setPeople] = useState();\n  const [total, setTotal] = useState();\n  useEffect(() => {\n    async function roadLikeData() {\n      const Ref = doc(db, \"basic\", \"cards\");\n      const Snap = await (await getDoc(Ref)).data();\n      const data = [];\n      for (let i in Snap) {\n        data.push(Snap[i]);\n      }\n      setPeople(data);\n    }\n    async function test() {\n      const Ref = query(collection(db, \"basic\"), where(\"id\", \"==\", 0));\n      const q = query(collection(db, \"basic\"), where(\"id\", \"==\", 0));\n      const Snap = await (await getDoc(Ref)).data();\n      console.log(Snap);\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(doc.id, \" => \", doc.data());\n      });\n    }\n    async function roadTotalData() {\n      const Ref = doc(db, \"basic\", \"total\");\n      const Snap = await (await getDoc(Ref)).data();\n      setTotal(Number(Object.values(Snap)));\n    }\n    test();\n    roadLikeData();\n    roadTotalData();\n  }, []);\n  useEffect(() => {\n    async function updateData() {\n      const totalUpdate = doc(db, \"basic\", \"total\");\n      await updateDoc(totalUpdate, {\n        totalCnt: total\n      });\n    }\n    updateData();\n  }, [total]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [total && /*#__PURE__*/_jsxDEV(Banner, {\n      totalCnt: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), people && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: people.map((item, index) => /*#__PURE__*/_jsxDEV(Profile, {\n        id: item.id,\n        url: item.url,\n        des: item.des,\n        name: item.name,\n        job: item.job,\n        isNew: item.isNew,\n        totalSet: setTotal,\n        like: item.like\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"as7w+/jwtktW5A1WUAIcN4ILzhI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Banner","Profile","db","collection","query","where","getDoc","doc","updateDoc","getDocs","App","people","setPeople","total","setTotal","roadLikeData","Ref","Snap","data","i","push","test","q","console","log","querySnapshot","forEach","id","roadTotalData","Number","Object","values","updateData","totalUpdate","totalCnt","map","item","index","url","des","name","job","isNew","like"],"sources":["C:/Users/dodoh/Desktop/Coding/My-Git/makeSome_React/basic/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Banner } from \"./components/molecules\";\nimport { Profile } from \"./components/organisms\";\nimport \"./App.css\";\nimport { db } from \"./firebase\";\nimport {\n  collection,\n  query,\n  where,\n  getDoc,\n  doc,\n  updateDoc,\n  getDocs,\n} from \"firebase/firestore\";\n\nfunction App() {\n  const [people, setPeople] = useState();\n  const [total, setTotal] = useState();\n\n  useEffect(() => {\n    async function roadLikeData() {\n      const Ref = doc(db, \"basic\", \"cards\");\n      const Snap = await (await getDoc(Ref)).data();\n      const data = [];\n      for (let i in Snap) {\n        data.push(Snap[i]);\n      }\n      setPeople(data);\n    }\n\n    async function test() {\n      const Ref = query(collection(db, \"basic\"), where(\"id\", \"==\", 0));\n      const q = query(collection(db, \"basic\"), where(\"id\", \"==\", 0));\n      const Snap = await (await getDoc(Ref)).data();\n      console.log(Snap);\n\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach((doc) => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(doc.id, \" => \", doc.data());\n      });\n    }\n\n    async function roadTotalData() {\n      const Ref = doc(db, \"basic\", \"total\");\n      const Snap = await (await getDoc(Ref)).data();\n      setTotal(Number(Object.values(Snap)));\n    }\n    test();\n    roadLikeData();\n    roadTotalData();\n  }, []);\n\n  useEffect(() => {\n    async function updateData() {\n      const totalUpdate = doc(db, \"basic\", \"total\");\n      await updateDoc(totalUpdate, {\n        totalCnt: total,\n      });\n    }\n    updateData();\n  }, [total]);\n\n  return (\n    <div className=\"App\">\n      {total && <Banner totalCnt={total} />}\n      {people && (\n        <>\n          {people.map((item, index) => (\n            <Profile\n              key={index}\n              id={item.id}\n              url={item.url}\n              des={item.des}\n              name={item.name}\n              job={item.job}\n              isNew={item.isNew}\n              totalSet={setTotal}\n              like={item.like}\n            />\n          ))}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}